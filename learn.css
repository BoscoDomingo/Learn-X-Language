/* comments appear inside slash-asterisk, just like this line!
   there are no "one-line comments"; this is the only comment style */
/* ####################
   ## BASICS
   #################### */
/* CSS uses rules to style elements. A rule is a group of style declarations.
Style declarations have the syntax `property: value;`*/

/* CSS styles set on parent elements are inherited by the child elements,
although not all styles are inherited, like the width and other similar
layout properties. */

/* Style declarations can be applied directly on HTML elements
via the `style` attribute */
<p style="color:yellow; font-weight:bold">This text is yellow and bold</p>
/* But this is extremely impractical, which is where selectors come in */

/* ####################
   ## SELECTORS
   #################### */

/* the selector is used to target an element on a page. */
selector {
    property: value;
    /* more properties...*/
}

/*
Here is an example element:

<div class='class1 class2' id='anID' attr='value' otherAttr='en-us foo bar' />
*/

/* You can target it using its element type (even target multiple elements!) */
div {}

p,
h1 {}

/* or using one of its CSS classes using "." */
.class1 {}

/* or both classes! */
.class1.class2 {}

/* or its id using "#"*/
#anID {}

/* or using the fact that it has an attribute with "[]" */
[attr] {
    font-size: smaller;
}

/* or that the attribute has a specific value */
[attr='value'] {
    font-size: smaller;
}

/* starts with a value (CSS 3) */
[attr^='val'] {
    font-size: smaller;
}

/* or ends with a value (CSS 3) */
[attr$='ue'] {
    font-size: smaller;
}

/* or contains a value in a space-separated list */
[otherAttr~='foo'] {}

[otherAttr~='bar'] {}

/* or contains a value in a dash-separated list, e.g., "-" (U+002D) */
[otherAttr|='en'] {
    font-size: smaller;
}


/* You can combine different selectors to create a more focused selector. Don't
   put spaces between them. */
div.some-class[attr$='ue'] {}

/* You can select an element which is a child of another element */
div.some-parent>.class-name {}

/* or a descendant of another element. Children are the direct descendants of
   their parent element, only one level down the tree. Descendants can be any
   level down the tree. */
div.some-parent .class-name {}

/* Warning: the same selector without a space has another meaning.
   Can you guess what? */
div.some-parent.class-name {}

/* You may also select an element based on its adjacent sibling */
.i-am-just-before+.this-element {}

/* or any sibling preceding it */
.i-am-any-element-before~.this-element {}

/* There are some selectors called pseudo classes that can be used to select an
   element only when it is in a particular state */

/* for example, when the cursor hovers over an element */
selector:hover {}

/* or a link has been visited */
selector:visited {}

/* or hasn't been visited */
selected:link {}

/* or an element is in focus */
selected:focus {}

/* any element that is the first child of its parent */
selector:first-child {}

/* any element that is the last child of its parent */
selector:last-child {}

/* Just like pseudo classes, pseudo elements allow you to style certain parts of
    a document  */

/* matches a virtual first child of the selected element */
selector::before {}

/* matches a virtual last child of the selected element */
selector::after {}

/* At appropriate places, an asterisk may be used as a wildcard to select every
   element */
* {}

/* all elements */
.parent * {}

/* all descendants */
.parent>* {}

/* all children */

/* Group any number of selectors to define styles that affect all selectors
   in the group */
selector1,
selector2 {}

/* ####################
   ## THE BOX MODEL
   #################### */
/* It's important to understand how HTML and CSS
approach elements and layout. Everything is a box, and
from inside-out: Content -> Padding -> Border -> Margin.

The content box is the area where the content is displayed.
The padding box is the space around the content.
The border box surrounds the padding.
The margin box defines the space between this box and other elements.
*/

/* To alter them, there's multiple ways to establish the values */
selector {
    /* Top, right, bottom, left */
    margin: 5px 5px 10px 10px;
    /* All 4 at once shorthand */
    padding: 20px;
    /* Vertical and lateral in 2 values */
    padding: 20px 30px;
    /* Top, left & right, bottom */
    margin: 5px 20px 10px;
    /* Individual values */
    margin-top: 30px;
    margin-left: 1px;
    /* `auto` horizontally centres the element
    within its container */
    margin: auto;
}

/* In the Standard Box Model, the height and width attributes
define the size of the content box. Any padding and border is
then added to that width and height to get the total size of the box.
The margin is NOT counted towards an element's height and width!
*/
/* Width will be 220px because of the padding and border */
p {
    margin: 5px 10px;
    padding: 4px 7px;
    width: 200px;
    border: 3px solid black;
}

/* In the Alternative Box Model, the padding and border
are already added into the `height` and `width` attributes,
thus removing the need to do calculations.
Activated by using `box-sizing: border-box;`.
*/
/* Width will be 200px, content will shrink */
p {
    margin: 5px 10px 5px 10px;
    padding: 4px 7px 4px 7px;
    width: 200px;
    box-sizing: border-box;
    border: 3px solid black;
}



/* ####################
   ## PROPERTIES
   #################### */

selector {

    /* Units of length can be absolute or relative. */

    /* Relative units */

    /* percentage of parent element width */
    width: 50%;
    /* multiples of element's original font-size, by default 1em = 16px */
    font-size: 2em;
    /* or the root element's font-size */
    font-size: 2rem;
    /* multiples of 1% of the viewport's width (CSS 3) */
    font-size: 2vw;
    /* or its height */
    font-size: 2vh;
    /* whichever of a vh or a vw is smaller */
    font-size: 2vmin;
    /* or greater */
    font-size: 2vmax;

    /* Absolute units */
    /* pixels */
    width: 200px;
    /* points */
    font-size: 20pt;
    /* centimeters */
    width: 5cm;
    /* millimeters */
    min-width: 50mm;
    /* inches */
    max-width: 5in;

    /* Colors */
    /* short hex format */
    color: #F6E;
    /* long hex format */
    color: #FF66EE;
    /* a named color */
    color: tomato;
    /* as rgb values */
    color: rgb(255, 255, 255);
    /* as rgb percentages */
    color: rgb(10%, 20%, 50%);
    /* as rgba values (CSS 3) Note: 0 <= a <= 1 */
    color: rgba(255, 0, 0, 0.3);
    /* equivalent to setting the alpha to 0 */
    color: transparent;
    /* as hsl percentages (CSS 3) */
    color: hsl(0, 100%, 50%);
    /* as hsl percentages with alpha */
    color: hsla(0, 100%, 50%, 0.3);

    /* Borders */
    /* similar to how background-color is set */
    border-width: 5px;
    border-style: solid;
    border-color: red;
    /* this is a short hand approach for the same */
    border: 5px solid red;
    /* this is a CSS3 property */
    border-radius: 20px;

    /* Images as backgrounds of elements */
    /* quotes inside url() optional */
    background-image: url(/img-path/img.jpg);

    /* Fonts */
    /* if the font family name has a space, it must be quoted */
    font-family: Arial;
    /* if the first one is not found, the browser uses the next, and so on */
    font-family: "Courier New";
    font-family: "Courier New", Trebuchet, Arial, sans-serif;
    /* There are only a certain number of fonts that are generally available across all systems.
    These are called "web safe fonts" and include:
    Arial, Courier New, Georgia, Times New Roman, Trebuchet MS, Verdana. */

    /* Font style & weight, line height */
    font-style: italic;
    /* 100 = thin, 400 = normal, 700 = bold, 900 = thick */
    font-weight: 300;
    font-weight: bold;
    line-height: 1.76;
    /* 1.76 times the height of the font*/

    /* Text alignment */
    /* left, right, center, justify */
    text-align: center;

    /* Text transform */
    text-transform: uppercase;
    text-transform: capitalize;

    /* Text decoration */
    text-decoration: line-through;

    /* Text shadow */
    /* You can establish multiple, separating by commas */
    /* Hor. offset, Vert. offset, blur and colour */
    text-shadow: 3px 2px 3px red,
        2px 2px 1px blue;
}


/* Using CSS */
/* You need to include the CSS file in your page's <head>. This is the
 recommended method. Refer to http://stackoverflow.com/questions/8284365 */

<link rel='stylesheet' type='text/css' href='path/to/style.css'>

/* You can also include some CSS inline in your HTML. */
<style>a {
    color: purple;
}

</style>
/* Or directly set CSS properties on the element. */
<div style="border: 1px solid red;"></div>
/* Usually the more specific selector's rules
are applied, but using `!important` this can be overriden */

/* A */
p.class1[attr='value']

/* B */
p.class1 {}

/* C */
p.class2 {}

/* D */
p {}

/* E */
p {
    /* This will be applied even if a
    p element uses class1 or class2 */
    property: value !important;
}

<p style='/*F*/ property:value;' class='class1 class2' attr='value'>

/* The `@media` operator is extremely useful to detect
different device types, such as phones or tablets */
/* change the h1 to use less ink on a printer */
@media print {
    h1 {
        color: black;
        background-color: white;
    }
}

/* make the font bigger when shown on a screen at least 480px wide */
@media screen and (min-width: 480px) {
    h1 {
        font-size: 3em;
        font-weight: normal;
    }
}

<head><meta name="viewport" content="width=device-width; initial-scale=1.0"></head>